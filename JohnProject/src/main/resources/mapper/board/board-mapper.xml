<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="board"><!-- 네임 스페이스 확인 후 변경바람 -->

	<resultMap type="board" id="boardMap">
		<result property="boardId" column="board_id"/>
		<result property="writerUsid" column="writer_usid"/>
		<result property="writerNickname" column="writer_nickname"/>
		<result property="title" column="title"/>
		<result property="content" column="content"/>
		<result property="enrollDate" column="enroll_date"/>
		<result property="hit" column="hit"/>
		<result property="bigCategory" column="big_category"/>
		<result property="smallCategory" column="small_category"/>
		<result property="isclose" column="isclose"/>
		<result property="maxMems" column="max_mems"/>
		<result property="agreeName" column="agree_name"/>
		<result property="disagreeName" column="disagree_name"/>
	</resultMap>
	
	<resultMap type="comment" id="commentMap">
		<result property="comId" column="com_id"/>
		<result property="comBoardId" column="com_board_id"/>
		<result property="comWriterUsid" column="com_writer_usid"/>
		<result property="comContent" column="com_content"/>
		<result property="comWriterNickname" column="com_writer_nickname"/>
		<result property="comProfilePic" column="com_profile_pic"/>
		<result property="comEnrollDate" column="com_enroll_date"/>
	</resultMap>
	
	<resultMap type="subscribe" id="subscribeMap">
		<result property="subMemUsid" column="sub_mem_usid"/>
		<result property="subCategory" column="sub_category"/>
	</resultMap>
	
	<select id="boardList" resultType="map">
		SELECT BOARD_ID , WRITER_USID , WRITER_NICKNAME , TITLE , 
		ENROLL_DATE , HIT , BIG_CATEGORY , SMALL_CATEGORY 
		, ISCLOSE , MAX_MEMS , AGREE_NAME , DISAGREE_NAME , WRITER_PROFILE,
		NVL(AGREE_NUM,0) AS AGREE_NUM, NVL(DISAGREE_NUM,0) AS DISAGREE_NUM, NVL(LIKE_NUM,0) AS LIKE_NUM
		FROM BOARD A LEFT OUTER JOIN (SELECT COUNT(*) AS AGREE_NUM , JUG_BOARD_ID
		FROM JUDGMENT WHERE JUG_RESULT = 0 GROUP BY JUG_BOARD_ID) B ON A.BOARD_ID = B.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS DISAGREE_NUM , JUG_BOARD_ID FROM JUDGMENT WHERE JUG_RESULT = 1 GROUP BY JUG_BOARD_ID) C
		ON A.BOARD_ID = C.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS LIKE_NUM, LIKE_BOARD_ID FROM LIKE_DISLIKE GROUP BY LIKE_BOARD_ID) D
		ON A.BOARD_ID = D.LIKE_BOARD_ID
		WHERE BIG_CATEGORY = '음성게시판' AND ISCLOSE = 0
		ORDER BY ENROLL_DATE DESC
	</select>
	
	<select id="boardSearch" parameterType="string" resultType="map">
		SELECT BOARD_ID , WRITER_USID , WRITER_NICKNAME , TITLE , 
		ENROLL_DATE , HIT , BIG_CATEGORY , SMALL_CATEGORY 
		, ISCLOSE , MAX_MEMS , AGREE_NAME , DISAGREE_NAME , WRITER_PROFILE,
		NVL(AGREE_NUM,0) AS AGREE_NUM, NVL(DISAGREE_NUM,0) AS DISAGREE_NUM, NVL(LIKE_NUM,0) AS LIKE_NUM
		FROM BOARD A LEFT OUTER JOIN (SELECT COUNT(*) AS AGREE_NUM , JUG_BOARD_ID
		FROM JUDGMENT WHERE JUG_RESULT = 0 GROUP BY JUG_BOARD_ID) B ON A.BOARD_ID = B.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS DISAGREE_NUM , JUG_BOARD_ID FROM JUDGMENT WHERE JUG_RESULT = 1 GROUP BY JUG_BOARD_ID) C
		ON A.BOARD_ID = C.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS LIKE_NUM, LIKE_BOARD_ID FROM LIKE_DISLIKE GROUP BY LIKE_BOARD_ID) D
		ON A.BOARD_ID = D.LIKE_BOARD_ID
		WHERE TITLE LIKE '%${keyword}%' OR WRITER_NICKNAME LIKE '%${keyword}%' OR CONTENT LIKE '%${keyword}%' AND ISCLOSE = 0
		AND BIG_CATEGORY = '일반게시판'
		ORDER BY ENROLL_DATE DESC
	</select>
	
	<select id="boardSearchCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD A LEFT OUTER JOIN (SELECT COUNT(*) AS AGREE_NUM , JUG_BOARD_ID
		FROM JUDGMENT WHERE JUG_RESULT = 0 GROUP BY JUG_BOARD_ID) B ON A.BOARD_ID = B.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS DISAGREE_NUM , JUG_BOARD_ID FROM JUDGMENT WHERE JUG_RESULT = 1 GROUP BY JUG_BOARD_ID) C
		ON A.BOARD_ID = C.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS LIKE_NUM, LIKE_BOARD_ID FROM LIKE_DISLIKE GROUP BY LIKE_BOARD_ID) D
		ON A.BOARD_ID = D.LIKE_BOARD_ID
		WHERE TITLE LIKE '%${keyword}%' OR WRITER_NICKNAME LIKE '%${keyword}%' OR CONTENT LIKE '%${keyword}%' AND ISCLOSE = 0
		AND BIG_CATEGORY = '일반게시판'
		ORDER BY ENROLL_DATE DESC
	</select>
	
	<select id="boardPopularList" resultType="map">
		SELECT ROWNUM, a.*
		FROM (SELECT BOARD_ID , WRITER_USID , WRITER_NICKNAME , TITLE ,  
		ENROLL_DATE , HIT , BIG_CATEGORY , SMALL_CATEGORY 
		, ISCLOSE , MAX_MEMS , AGREE_NAME , DISAGREE_NAME , WRITER_PROFILE,
		NVL(AGREE_NUM,0) AS AGREE_NUM, NVL(DISAGREE_NUM,0) AS DISAGREE_NUM, NVL(LIKE_NUM,0) AS LIKE_NUM
		FROM BOARD A LEFT OUTER JOIN (SELECT COUNT(*) AS AGREE_NUM , JUG_BOARD_ID
		FROM JUDGMENT WHERE JUG_RESULT = 0 GROUP BY JUG_BOARD_ID) B ON A.BOARD_ID = B.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS DISAGREE_NUM , JUG_BOARD_ID FROM JUDGMENT WHERE JUG_RESULT = 1 GROUP BY JUG_BOARD_ID) C
		ON A.BOARD_ID = C.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS LIKE_NUM, LIKE_BOARD_ID FROM LIKE_DISLIKE GROUP BY LIKE_BOARD_ID) D
		ON A.BOARD_ID = D.LIKE_BOARD_ID
		WHERE ISCLOSE = 0 AND BIG_CATEGORY = '일반게시판'
		ORDER BY HIT DESC) a
		WHERE <![CDATA[ROWNUM <= 15]]> 
	</select>
	
	<select id="boardPopularListSmall" resultType="map">
		SELECT BOARD_ID , WRITER_USID , WRITER_NICKNAME , TITLE ,  
		ENROLL_DATE , HIT , BIG_CATEGORY , SMALL_CATEGORY 
		, ISCLOSE , MAX_MEMS , AGREE_NAME , DISAGREE_NAME , WRITER_PROFILE,
		NVL(AGREE_NUM,0) AS AGREE_NUM, NVL(DISAGREE_NUM,0) AS DISAGREE_NUM, NVL(LIKE_NUM,0) AS LIKE_NUM
		FROM BOARD A LEFT OUTER JOIN (SELECT COUNT(*) AS AGREE_NUM , JUG_BOARD_ID
		FROM JUDGMENT WHERE JUG_RESULT = 0 GROUP BY JUG_BOARD_ID) B ON A.BOARD_ID = B.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS DISAGREE_NUM , JUG_BOARD_ID FROM JUDGMENT WHERE JUG_RESULT = 1 GROUP BY JUG_BOARD_ID) C
		ON A.BOARD_ID = C.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS LIKE_NUM, LIKE_BOARD_ID FROM LIKE_DISLIKE GROUP BY LIKE_BOARD_ID) D
		ON A.BOARD_ID = D.LIKE_BOARD_ID
		WHERE ISCLOSE = 0 AND BIG_CATEGORY = '일반게시판'
		ORDER BY HIT DESC
	</select>
	
	<select id="boardNewList" resultType="map">
		SELECT ROWNUM, a.*
		FROM (SELECT BOARD_ID , WRITER_USID , WRITER_NICKNAME , TITLE ,  
		ENROLL_DATE , HIT , BIG_CATEGORY , SMALL_CATEGORY 
		, ISCLOSE , MAX_MEMS , AGREE_NAME , DISAGREE_NAME , WRITER_PROFILE,
		NVL(AGREE_NUM,0) AS AGREE_NUM, NVL(DISAGREE_NUM,0) AS DISAGREE_NUM, NVL(LIKE_NUM,0) AS LIKE_NUM
		FROM BOARD A LEFT OUTER JOIN (SELECT COUNT(*) AS AGREE_NUM , JUG_BOARD_ID
		FROM JUDGMENT WHERE JUG_RESULT = 0 GROUP BY JUG_BOARD_ID) B ON A.BOARD_ID = B.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS DISAGREE_NUM , JUG_BOARD_ID FROM JUDGMENT WHERE JUG_RESULT = 1 GROUP BY JUG_BOARD_ID) C
		ON A.BOARD_ID = C.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS LIKE_NUM, LIKE_BOARD_ID FROM LIKE_DISLIKE GROUP BY LIKE_BOARD_ID) D
		ON A.BOARD_ID = D.LIKE_BOARD_ID
		WHERE ISCLOSE = 0 AND BIG_CATEGORY = '일반게시판'
		ORDER BY ENROLL_DATE DESC) a
		WHERE <![CDATA[ROWNUM <= 15]]> 
	</select>
	
	<select id="boardNewListSmall" resultType="map">
		SELECT BOARD_ID , WRITER_USID , WRITER_NICKNAME , TITLE ,  
		ENROLL_DATE , HIT , BIG_CATEGORY , SMALL_CATEGORY 
		, ISCLOSE , MAX_MEMS , AGREE_NAME , DISAGREE_NAME , WRITER_PROFILE,
		NVL(AGREE_NUM,0) AS AGREE_NUM, NVL(DISAGREE_NUM,0) AS DISAGREE_NUM, NVL(LIKE_NUM,0) AS LIKE_NUM
		FROM BOARD A LEFT OUTER JOIN (SELECT COUNT(*) AS AGREE_NUM , JUG_BOARD_ID
		FROM JUDGMENT WHERE JUG_RESULT = 0 GROUP BY JUG_BOARD_ID) B ON A.BOARD_ID = B.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS DISAGREE_NUM , JUG_BOARD_ID FROM JUDGMENT WHERE JUG_RESULT = 1 GROUP BY JUG_BOARD_ID) C
		ON A.BOARD_ID = C.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS LIKE_NUM, LIKE_BOARD_ID FROM LIKE_DISLIKE GROUP BY LIKE_BOARD_ID) D
		ON A.BOARD_ID = D.LIKE_BOARD_ID
		WHERE ISCLOSE = 0 AND BIG_CATEGORY = '일반게시판'
		ORDER BY ENROLL_DATE DESC
	</select>
	
	<select id="boardLikedList" parameterType="_int" resultType="map">
		SELECT BOARD_ID , WRITER_USID , WRITER_NICKNAME , TITLE ,  
		ENROLL_DATE , HIT , BIG_CATEGORY , SMALL_CATEGORY 
		, ISCLOSE , MAX_MEMS , AGREE_NAME , DISAGREE_NAME , WRITER_PROFILE,
		NVL(AGREE_NUM,0) AS AGREE_NUM, NVL(DISAGREE_NUM,0) AS DISAGREE_NUM, NVL(LIKE_NUM,0) AS LIKE_NUM
		FROM BOARD A LEFT OUTER JOIN (SELECT COUNT(*) AS AGREE_NUM , JUG_BOARD_ID
		FROM JUDGMENT WHERE JUG_RESULT = 0 GROUP BY JUG_BOARD_ID) B ON A.BOARD_ID = B.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS DISAGREE_NUM , JUG_BOARD_ID FROM JUDGMENT WHERE JUG_RESULT = 1 GROUP BY JUG_BOARD_ID) C
		ON A.BOARD_ID = C.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS LIKE_NUM, LIKE_BOARD_ID FROM LIKE_DISLIKE GROUP BY LIKE_BOARD_ID) D
		ON A.BOARD_ID = D.LIKE_BOARD_ID
		WHERE BOARD_ID IN (SELECT LIKE_BOARD_ID FROM LIKE_DISLIKE WHERE LIKE_USID = #{usid}) AND ISCLOSE = 0 
		ORDER BY ENROLL_DATE DESC
	</select>
	
	<select id="boardLikedCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) FROM LIKE_DISLIKE JOIN BOARD ON LIKE_USID = BOARD_ID WHERE LIKE_USID = #{usid} AND ISCLOSE = 0 
	</select>
	
	<select id="boardHistoryList" parameterType="_int" resultType="map">
		SELECT BOARD_ID , WRITER_USID , WRITER_NICKNAME , TITLE ,  
		ENROLL_DATE , HIT , BIG_CATEGORY , SMALL_CATEGORY 
		, ISCLOSE , MAX_MEMS , AGREE_NAME , DISAGREE_NAME , WRITER_PROFILE,
		NVL(AGREE_NUM,0) AS AGREE_NUM, NVL(DISAGREE_NUM,0) AS DISAGREE_NUM, NVL(LIKE_NUM,0) AS LIKE_NUM
		FROM BOARD A LEFT OUTER JOIN (SELECT COUNT(*) AS AGREE_NUM , JUG_BOARD_ID
		FROM JUDGMENT WHERE JUG_RESULT = 0 GROUP BY JUG_BOARD_ID) B ON A.BOARD_ID = B.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS DISAGREE_NUM , JUG_BOARD_ID FROM JUDGMENT WHERE JUG_RESULT = 1 GROUP BY JUG_BOARD_ID) C
		ON A.BOARD_ID = C.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS LIKE_NUM, LIKE_BOARD_ID FROM LIKE_DISLIKE GROUP BY LIKE_BOARD_ID) D
		ON A.BOARD_ID = D.LIKE_BOARD_ID
		WHERE WRITER_USID = ${usid} AND ISCLOSE = 0 
		ORDER BY ENROLL_DATE DESC
	</select>
	
	<select id="boardHistoryCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) FROM BOARD WHERE WRITER_USID = ${usid} AND ISCLOSE = 0
	</select>
	
	<select id="boardCateList" parameterType="string" resultType="map">
		SELECT BOARD_ID , WRITER_USID , WRITER_NICKNAME , TITLE ,  
		ENROLL_DATE , HIT , BIG_CATEGORY , SMALL_CATEGORY 
		, ISCLOSE , MAX_MEMS , AGREE_NAME , DISAGREE_NAME , WRITER_PROFILE,
		NVL(AGREE_NUM,0) AS AGREE_NUM, NVL(DISAGREE_NUM,0) AS DISAGREE_NUM, NVL(LIKE_NUM,0) AS LIKE_NUM
		FROM BOARD A LEFT OUTER JOIN (SELECT COUNT(*) AS AGREE_NUM , JUG_BOARD_ID
		FROM JUDGMENT WHERE JUG_RESULT = 0 GROUP BY JUG_BOARD_ID) B ON A.BOARD_ID = B.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS DISAGREE_NUM , JUG_BOARD_ID FROM JUDGMENT WHERE JUG_RESULT = 1 GROUP BY JUG_BOARD_ID) C
		ON A.BOARD_ID = C.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS LIKE_NUM, LIKE_BOARD_ID FROM LIKE_DISLIKE GROUP BY LIKE_BOARD_ID) D
		ON A.BOARD_ID = D.LIKE_BOARD_ID
		WHERE SMALL_CATEGORY = #{key} AND ISCLOSE = 0 AND BIG_CATEGORY = '일반게시판'
		ORDER BY ENROLL_DATE DESC
	</select>
	
	<select id="boardCateCount" parameterType="string" resultType="_int">
		SELECT COUNT(*) FROM BOARD WHERE SMALL_CATEGORY = #{key} AND ISCLOSE = 0 AND BIG_CATEGORY = '일반게시판'
	</select>
	
	<insert id="boardInsert" parameterType="board" >
		INSERT INTO BOARD VALUES(
		SEQ_BOARD_NO.NEXTVAL, #{writerUsid}, #{writerNickname}, #{title}, #{content}, SYSDATE, default, #{bigCategory}, #{smallCategory}, 0, default, #{agreeName}, #{disagreeName}
		, #{profilePic})
	</insert>
	
	<insert id="boardInsertFile" parameterType="boardFile">
		INSERT INTO BOARD_FILE VALUES(#{board_file_no}, #{board_file_name})
		<selectKey keyProperty="board_file_no" resultType="_int" order="BEFORE">
			SELECT SEQ_BOARD_NO.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<select id="boardCurrBoard" resultType="string">
		SELECT SEQ_BOARD_NO.CURRVAL FROM DUAL
	</select>
	
	<update id="boardModify" parameterType="map">
		UPDATE BOARD SET TITLE = #{title}, CONTENT = #{content}, SMALL_CATEGORY = #{smallCate}, AGREE_NAME = #{agreeName}, DISAGREE_NAME = #{disagreeName}
		WHERE BOARD_ID = #{boardId}
	</update>
	
	<update id="boardDelete" parameterType="_int">
		UPDATE BOARD SET ISCLOSE = 1 WHERE BOARD_ID = #{boardId}
	</update>
	
	<select id="boardSelectOne" parameterType="_int" resultType="map">
		SELECT BOARD_ID , WRITER_USID , WRITER_NICKNAME , TITLE , CONTENT , 
		ENROLL_DATE , HIT , BIG_CATEGORY , SMALL_CATEGORY , WRITER_PROFILE
		, ISCLOSE , MAX_MEMS , AGREE_NAME , DISAGREE_NAME , 
		NVL(AGREE_NUM,0) AS AGREE_NUM, NVL(DISAGREE_NUM,0) AS DISAGREE_NUM, NVL(LIKE_NUM,0) AS LIKE_NUM
		FROM BOARD A LEFT OUTER JOIN (SELECT COUNT(*) AS AGREE_NUM , JUG_BOARD_ID
		FROM JUDGMENT WHERE JUG_RESULT = 0 GROUP BY JUG_BOARD_ID) B ON A.BOARD_ID = B.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS DISAGREE_NUM , JUG_BOARD_ID FROM JUDGMENT WHERE JUG_RESULT = 1 GROUP BY JUG_BOARD_ID) C
		ON A.BOARD_ID = C.JUG_BOARD_ID 
		LEFT OUTER JOIN (SELECT COUNT(*) AS LIKE_NUM, LIKE_BOARD_ID FROM LIKE_DISLIKE GROUP BY LIKE_BOARD_ID) D
		ON A.BOARD_ID = D.LIKE_BOARD_ID
		WHERE BOARD_ID = #{boardId}
	</select>
	
	<select id="commentSelectList" parameterType="_int" resultType="map">
		SELECT COM_ID, COM_BOARD_ID, COM_WRITER_USID, COM_CONTENT, COM_WRITER_NICKNAME, 
		COM_PROFILE_PIC, COM_ENROLL_DATE, NVL(LIKE_COUNT,0) LIKE_COUNT, NVL(DISLIKE_COUNT,0) DISLIKE_COUNT FROM "COMMENT" A
		LEFT OUTER JOIN (SELECT COUNT(COM_LIKEDISLIKE) LIKE_COUNT, COM_LIKEDISLIKE_ID FROM COMMENT_LIKEDISLIKE WHERE COM_LIKEDISLIKE = 1 GROUP BY COM_LIKEDISLIKE_ID) B
		ON A.COM_ID = B.COM_LIKEDISLIKE_ID
		LEFT OUTER JOIN (SELECT COUNT(COM_LIKEDISLIKE) DISLIKE_COUNT, COM_LIKEDISLIKE_ID FROM COMMENT_LIKEDISLIKE WHERE COM_LIKEDISLIKE = 2 GROUP BY COM_LIKEDISLIKE_ID) C
		ON A.COM_ID = C.COM_LIKEDISLIKE_ID
		WHERE COM_BOARD_ID = #{currBoardNo}
		ORDER BY COM_ENROLL_DATE
	</select>
	
	<insert id="boardCommentInsert" parameterType="map">
		INSERT INTO "COMMENT" VALUES(SEQ_COMMENT_NO.NEXTVAL, #{currBoardNo},#{writerUsid} ,#{content} , #{writerNick}, #{profilePic}, SYSDATE)
	</insert>
	
	<select id="boardSelectCate" parameterType="string" resultMap="boardMap">
		SELECT * FROM BOARD WHERE SMALL_CATEGORY = #{boardTitle}
	</select>
	
	<select id="boardSubList" parameterType="_int" resultMap="subscribeMap">
		SELECT * FROM SUBSCRIBE WHERE SUB_MEM_USID = #{usid}
	</select>
	
	<insert id="boardLikeInsert" parameterType="map">
		INSERT INTO LIKE_DISLIKE VALUES(#{loginUsid}, #{boardId})
	</insert>
	
	<delete id="boardLikeDelete" parameterType="map">
		DELETE LIKE_DISLIKE WHERE LIKE_USID = #{loginUsid} AND LIKE_BOARD_ID = #{boardId}
	</delete>
	
	<select id="boardHasLiked" parameterType="map" resultType="_int">
		SELECT COUNT(*) FROM LIKE_DISLIKE WHERE LIKE_USID = #{loginUsid} AND LIKE_BOARD_ID = #{boardId}
	</select>
	
	<update id="boardReadCount" parameterType="_int">
		UPDATE BOARD SET HIT = HIT + 1 WHERE BOARD_ID = #{boardNo}
	</update>
	
	<select id="boardHasJudged" parameterType="map" resultType="_int">
		SELECT COUNT(*) FROM JUDGMENT WHERE JUG_BOARD_ID = #{boardId} AND JUG_MEM_USID = #{loginUsid}
	</select>
	
	<insert id="boardJudgeInsert" parameterType="map">
		INSERT INTO JUDGMENT VALUES(#{boardId}, #{loginUsid}, #{judResult}, #{loginNick})
	</insert>
	
	<select id="boardCommentHasLiked" parameterType="map" resultType="_int">
		SELECT COUNT(*) FROM COMMENT_LIKEDISLIKE WHERE COM_LIKEDISLIKE_ID = #{comId} AND COM_LIKEDISLIKE_USID = #{loginUsid}
	</select>
	
	<insert id="boardCommentLike" parameterType="map">
		INSERT INTO COMMENT_LIKEDISLIKE VALUES(#{comId}, #{loginUsid}, #{key})
	</insert>
	
	<delete id="boardCommentDelete" parameterType="map">
		DELETE FROM "COMMENT" WHERE COM_ID = ${comId}
	</delete>
	
	<update id="boardCommentModify" parameterType="map">
		UPDATE "COMMENT" SET COM_CONTENT = #{value} WHERE COM_ID = #{comId}
	</update>
</mapper>
